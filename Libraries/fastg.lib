; Warning - Spaghetti code

GoogleOpener:
	If(A_ThisHotkey = A_PriorHotkey && A_TimeSincePriorHotkey < 250 && StrLen(lastcopied)>0) ; if you double tap RAlt it searches Google for whatever you have selected(or have in your clipboard)
	{ 		
		websearchvar:=lastcopied
		GuiControl, FastGoogle:, websearchvar, %lastcopied%
		Send {End}
		websearchvar:="https://www.google.bg/search?q=" websearchvar
		Run, %websearchvar%,, UseErrorLevel
		websearchvar=
		return
	}

	zfont=12
	global suggestionnumber=0
	amultiplier=1
	guiw:=695*amultiplier
	guih:=43
	buth:=(guih)/2-15
	butw:=(guiw)/4
	WSTog := !WSTog
	websearchvar=
	If !WSTog
	{
		SetTimer, CheckGoogleSearch, Off
		sleep 10
		Gui, Suggestion:Destroy
		FadeOut(FastGoogle)
		Gui, FastGoogle:Destroy
		lastcopied=
		return
	}
	oCB := ClipboardAll		; save clipboard contents
	Send, ^c
	clipboard:=RTrim(clipboard, " `t`r`n")		; trim left/right whitespaces
	clipboard:=LTrim(clipboard, " `t`r`n")
	lastcopied:=clipboard
	ClipBoard := oCB		; return original Clipboard contents

	; Part of Google AutoComplete with SuggestQuery API
	NormalKeyList := "a`nb`nc`nd`ne`nf`ng`nh`ni`nj`nk`nl`nm`nn`no`np`nq`nr`ns`nt`nu`nv`nw`nx`ny`nz`n" ;list of key names separated by `n that make up words in upper and lower case variants
	NumberKeyList := "1`n2`n3`n4`n5`n6`n7`n8`n9`n0" ;list of key names separated by `n that make up words as well as their numpad equivalents
	SetHotkeys(NormalKeyList,NumberKeyList)

	Gui, FastGoogle:New, +hwndFastGoogle
	Gui, -Border -Caption +AlwaysOnTop +LastFound +ToolWindow
	Gui, Color,1e1e1e, 333333
	Gui, Font, w700 s%zfont% cD0D0D0, Segoe UI Black

	Gui, Add, Progress, % "x-1 y-1 w" guiw " h22 Background333333 Disabled hwndHPROG"
	
	Gui, Add, Edit, % "x0 y16 w" guiw-47 " h25 hwndWebSearch vwebsearchvar -E0x200 +Center -VScroll", %websearchvar%
	SHAutoComplete(WebSearch)
	Gui, Add, Button, % "x+0 y16 h25 w47 gFastGoogleSearch hwndSearchBut1 +Default", Go
	Opt1 := [6, 0x333333, 0x333333, 0x008383]
	Opt2 := [ , 0x333333, 0x333333, 0xffffff]
	Opt4 := [0, 0xC0A0A0A0, , 0xC0606000]
	ImageButton.Create(SearchBut1, Opt1, Opt2, "", Opt4)
	guiw:=guiw*dpi
	guih:=guih*dpi
	WinSet, Region, 0-0 w%guiw% h%guih% r18-18
	WinSet, Transparent, 243
	Gui, Show, y-14 h%guih% w%guiw%, .devRS Google Search

	SetTimer, CheckGoogleSearch, 50
return

#If	WinActive( "ahk_id" . FastGoogle )
	ESC::
	Gui, Suggestion:Destroy
	FadeOut(FastGoogle)
	lastcopied=
	return

	; Part of Google AutoComplete with SuggestQuery API
	Up::
	Gui Suggestion:Font, cFFFFFF
	GuiControl Suggestion:Font, opt%suggestionnumber%
	suggestionnumber:=suggestionnumber-1
	if(suggestionnumber<1)
		suggestionnumber=6
	Gui Suggestion:Font, c009090
	GuiControl Suggestion:Font, opt%suggestionnumber%
	GuiControl FastGoogle:Text, websearchvar, % suggestions_array[suggestionnumber]
	Send {End}
	return

	; Part of Google AutoComplete with SuggestQuery API
	Down::
	Gui Suggestion:Font, cFFFFFF
	GuiControl Suggestion:Font, opt%suggestionnumber%
	suggestionnumber:=suggestionnumber+1
	if(suggestionnumber>6)
		suggestionnumber=1
	Gui Suggestion:Font, c009090
	GuiControl Suggestion:Font, opt%suggestionnumber% 
	GuiControl FastGoogle:Text, websearchvar, % suggestions_array[suggestionnumber]
	Send {End}
	return

	Enter::
	sleep 20
	GoSub FastGoogleSearch
	return
	
#If

; Part of Google AutoComplete with SuggestQuery API
SuggestionsLabel:
	sleep 50
	suggestionnumber=0
	Gui, FastGoogle:Submit, NoHide
	suggestions := GoogleSuggest(websearchvar)
	suggestions := JavaEscapedToUnicode(suggestions) ; Needed to replace \u***** characters ; credit to Lexikos - taken from https://autohotkey.com/board/topic/63263-unicode-escaped-string-convert-u00/
	suggestions_array := StrSplit(suggestions, "`n")

	guiw:=430
	fakecenter:=A_ScreenWidth/2-guiw/2-19
	guih:=165
	IfWinNotExist, ahk_id %SuggestionsHWND%
	{
		IfWinActive, ahk_id %FastGoogle%
		{
		Gui, Suggestion:New, +hwndSuggestionsHWND
		Gui, -Border -Caption +AlwaysOnTop +LastFound +ToolWindow
		Gui, Color, 333333
		Gui, Font, w700 s11 cFFFFFF, Segoe UI Black
		OnMessage(0x200, "WM_CHANGETXTCOLOR")
		Gui, Add, Progress, % "x-1 y-1 w" guiw " h10 Background333333 Disabled hwndHPROG"
		Gui, Add, Text, % "x0 y7 w" guiw " h23 hwndSearchBut1 vopt1 gSuggestActionBtn1 -E0x200 +Center -VScroll", % suggestions_array[1]
		Gui, Add, Text, % "x0 y+3 w" guiw " h23 hwndSearchBut2 vopt2 gSuggestActionBtn2 -E0x200 +Center -VScroll", % suggestions_array[2]
		Gui, Add, Text, % "x0 y+3 w" guiw " h23 hwndSearchBut3 vopt3 gSuggestActionBtn3 -E0x200 +Center -VScroll", % suggestions_array[3]
		Gui, Add, Text, % "x0 y+3 w" guiw " h23 hwndSearchBut4 vopt4 gSuggestActionBtn4 -E0x200 +Center -VScroll", % suggestions_array[4]
		Gui, Add, Text, % "x0 y+3 w" guiw " h23 hwndSearchBut5 vopt5 gSuggestActionBtn5 -E0x200 +Center -VScroll", % suggestions_array[5]
		Gui, Add, Text, % "x0 y+3 w" guiw " h23 hwndSearchBut6 vopt6 gSuggestActionBtn6 -E0x200 +Center -VScroll", % suggestions_array[6]
		guiw:=guiw*dpi
		guih:=guih*dpi
		WinSet, Region, 0-0 w%guiw% h%guih% r10-10
		WinSet, Transparent, 190
		Gui, Show, NoActivate x%fakecenter% y36 h%guih% w%guiw%
		}
	}
	else
	{
		GuiControl Suggestion:Text, opt1, % suggestions_array[1]
		GuiControl Suggestion:Text, opt2, % suggestions_array[2]
		GuiControl Suggestion:Text, opt3, % suggestions_array[3]
		GuiControl Suggestion:Text, opt4, % suggestions_array[4]
		GuiControl Suggestion:Text, opt5, % suggestions_array[5]
		GuiControl Suggestion:Text, opt6, % suggestions_array[6]
	}

return

SuggestActionBtn1:
websearchvar:=suggestions_array[1]
GoSub FastGoogleSearch
return
SuggestActionBtn2:
websearchvar:=suggestions_array[2]
GoSub FastGoogleSearch
return
SuggestActionBtn3:
websearchvar:=suggestions_array[3]
GoSub FastGoogleSearch
return
SuggestActionBtn4:
websearchvar:=suggestions_array[4]
GoSub FastGoogleSearch
return
SuggestActionBtn5:
websearchvar:=suggestions_array[5]
GoSub FastGoogleSearch
return
SuggestActionBtn6:
websearchvar:=suggestions_array[6]
GoSub FastGoogleSearch
return

FastGoogleSearch:
	Gui, Submit, NoHide
	if(websearchvar!="")
	{	
		Loop, Parse, websearchvar
		If (A_LoopField=.) 
		{
			WSTog:=!WSTog
			SetTimer, CheckGoogleSearch, Off
			Run, http:%websearchvar%
			websearchvar=
			lastcopied=
			Gui, Suggestion:Destroy
			FadeOut(FastGoogle)
			Gui, FastGoogle:Destroy
			return
		}
		WSTog:=!WSTog
		SetTimer, CheckGoogleSearch, Off
		websearchvar:="https://www.google.bg/search?q=" websearchvar
		Run, %websearchvar%,, UseErrorLevel
		websearchvar=
	}
	lastcopied=
	Gui, Suggestion:Destroy
	FadeOut(FastGoogle)
	Gui, FastGoogle:Destroy
return

CheckGoogleSearch:
	IfWinNotActive, ahk_id %FastGoogle%
	{
		sleep 40
		WSTog:=!WSTog
		Gui, Suggestion:Destroy
		FadeOut(FastGoogle)
		lastcopied=
		Gui, FastGoogle:Destroy

		SetTimer, CheckGoogleSearch, Off
		sleep 10
	}
return

SHAutoComplete(hEdit)	; adds the ability to insert control characters from the Ascii table (such as ctrl + backspace)
{
	DllCall("ole32\CoInitialize", "Uint", 0)
	DllCall("shlwapi\SHAutoComplete", "Uint", hEdit, "Uint",0x80000000|0x20000000)
	DllCall("ole32\CoUninitialize")
}

GoogleSuggest(query) 	; Part of Google AutoComplete with SuggestQuery API
{
	
	suggestURL := "http://suggestqueries.google.com/complete/search?output=firefox&q="
	currentSuggestURL = %suggestURL%%query%
	;MsgBox, %currentsuggestURL% ; Testing only!!!


	; Download text to a variable:
	whr := ComObjCreate("WinHttp.WinHttpRequest.5.1")
	whr.Open("GET", currentSuggestURL, true)
	whr.Send()
	; Using 'true' above and the call below allows the script to remain responsive.
	whr.WaitForResponse()
	suggestions := whr.ResponseText
	;MsgBox % suggestions ; Testing only!!!

	quoteVar = `",[`"
	suggestions := StrReplace(suggestions, quoteVar, "`r`n")
	;MsgBox % suggestions ; Testing only!!!

	quoteVar = `",`"
	suggestions := StrReplace(suggestions, quoteVar, "`r`n")
	;MsgBox % suggestions ; Testing only!!!

	quoteVar = `"
	suggestions := StrReplace(suggestions, quoteVar)
	;MsgBox % suggestions ; Testing only!!!

	suggestions := StrReplace(suggestions, "[")
	;MsgBox % suggestions ; Testing only!!!

	suggestions := StrReplace(suggestions, "]")
	;MsgBox % suggestions ; Testing only!!!

	; delete query. In the begginning there is always exact query.
	suggestions := StrReplace(suggestions, query,,, 1)
	;MsgBox % suggestions ; Testing only!!!

	; delete first "`r`n" which is left after deleting query.
	suggestions := StrReplace(suggestions, "`r`n",,, 1)
	;MsgBox % suggestions ; Testing only!!!

	suggestions := StrReplace(suggestions, ",")

	return suggestions

}

SetHotkeys(NormalKeyList,NumberKeyList) 	; Part of Google AutoComplete with SuggestQuery API
{
    Loop, Parse, NormalKeyList, `n
    {
		#If WinActive("ahk_id" . FastGoogle) || WinActive("ahk_id" . SuggestionsHWND)
		Hotkey, If, WinActive("ahk_id" . FastGoogle) || WinActive("ahk_id" . SuggestionsHWND)
        Hotkey, ~%A_LoopField%, SuggestionsLabel, UseErrorLevel
        Hotkey, ~+%A_LoopField%, SuggestionsLabel, UseErrorLevel
    }

    Loop, Parse, NumberKeyList, `n
    {
		#If WinActive("ahk_id" . FastGoogle) || WinActive("ahk_id" . SuggestionsHWND)
		Hotkey, If, WinActive("ahk_id" . FastGoogle) || WinActive("ahk_id" . SuggestionsHWND)
        Hotkey, ~%A_LoopField%, SuggestionsLabel, UseErrorLevel
        Hotkey, ~Numpad%A_LoopField%, SuggestionsLabel, UseErrorLevel
    }
}

; Needed to replace \u***** characters ; credit to Lexikos - taken from https://autohotkey.com/board/topic/63263-unicode-escaped-string-convert-u00/
JavaEscapedToUnicode(s) { 
    i := 1
    while j := RegExMatch(s, "\\u[A-Fa-f0-9]{1,4}", m, i)
        e .= SubStr(s, i, j-i) Chr("0x" SubStr(m, 3)), i := j + StrLen(m)
    return e . SubStr(s, i)
}

WM_CHANGETXTCOLOR(wParam, lParam, Msg, Hwnd)
{
	If A_Gui=Suggestion
	{
		global VarNameSave
		Gui, Suggestion:Font, cFFFFFF
		GuiControl, Suggestion:Font, opt%suggestionnumber%
		GuiControl, Suggestion:Font, %VarNameSave%
		MouseGetPos, , , HWIN, HCTRL, 2
		GuiControlGet, VarName, %HWIN%:Name, %HCTRL%
		VarNameSave:=VarName
		suggestionnumber:=SubStr(VarName, 0)
		Gui, Suggestion:Font, c009090
		GuiControl, Suggestion:Font, %VarName%
	}
}